!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module pyratp ! in 
    interface  ! in :pyratp
        module constant_values ! in :pyratp:mod_Cocnstant_ValuesF2PY.f90
            real :: r
            real :: rho
            real :: cp
            real :: pi
            real :: sigma
            real :: gamma
            real :: lambda
            subroutine cv_set ! in :pyratp:mod_Cocnstant_ValuesF2PY.f90:constant_values
            end subroutine cv_set
        end module constant_values
        module grid3d ! in :pyratp:mod_Grid3DF2PY_64bit.f90
            real :: total_ground_area
            integer, allocatable,dimension(:) :: nje
            integer, allocatable,dimension(:,:,:) :: kxyz
            integer :: int_scattering
            real, allocatable,dimension(:) :: s_vx
            real :: timezone
            integer :: njz
            integer :: njy
            integer :: njx
            real, allocatable,dimension(:) :: s_vt
            real :: orientation
            real, allocatable,dimension(:) :: volume_canopy
            real, allocatable,dimension(:) :: rs
            logical :: scattering
            character*6 :: spec_gfill
            real :: latitude
            integer :: idecaly
            real, allocatable,dimension(:,:) :: n_detailed
            real :: n_canopy
            integer :: nemax
            real :: zorig
            integer :: nblosoil
            integer, allocatable,dimension(:) :: numx
            character*6 :: spec_grid
            integer, allocatable,dimension(:) :: numz
            integer, allocatable,dimension(:) :: numy
            integer(kind=8) :: nveg
            integer, allocatable,dimension(:,:) :: nume
            real, allocatable,dimension(:,:) :: leafareadensity
            integer, allocatable,dimension(:) :: voxel_canopy
            real, allocatable,dimension(:) :: dz
            real :: dx
            real :: dy
            integer :: nent
            real :: yorig
            real :: s_canopy
            logical :: isolated_box
            integer :: nsol
            real, allocatable,dimension(:,:) :: s_vt_vx
            real :: longitude
            real :: xorig
            integer :: int_isolated_box
            subroutine g3d_destroy ! in :pyratp:mod_Grid3DF2PY_64bit.f90:grid3d
            end subroutine g3d_destroy
        end module grid3d
        module skyvault ! in :pyratp:mod_SkyvaultF2PY.f90
            real, allocatable,dimension(:) :: pc
            real, allocatable,dimension(:) :: azmoy
            real, allocatable,dimension(:) :: omega
            real, allocatable,dimension(:) :: hmoy
            integer :: ndir
            subroutine sv_read(fname) ! in :pyratp:mod_SkyvaultF2PY.f90:skyvault
                use constant_values
                character*28 :: fname
            end subroutine sv_read
            subroutine sv_destroy ! in :pyratp:mod_SkyvaultF2PY.f90:skyvault
            end subroutine sv_destroy
        end module skyvault
        module vegetation_types ! in :pyratp:mod_Vegetation_TypesF2PY.f90
            real, allocatable,dimension(:,:) :: agslt
            integer, allocatable,dimension(:) :: ismine
            real, allocatable,dimension(:,:) :: agsn
            real, allocatable,dimension(:,:) :: ajmaxn
            real, allocatable,dimension(:,:) :: agsvpd
            integer :: nblomin
            integer, allocatable,dimension(:) :: nblo
            integer, allocatable,dimension(:) :: i_gsca
            real, allocatable,dimension(:,:) :: distinc
            real, allocatable,dimension(:,:) :: avcmaxn
            real, allocatable,dimension(:,:) :: agspar
            integer :: nbinclimax
            integer, allocatable,dimension(:) :: i_gspar
            real, allocatable,dimension(:,:) :: aga
            real, allocatable,dimension(:,:) :: ardn
            real, allocatable,dimension(:) :: mu
            real, allocatable,dimension(:,:) :: rf
            real, allocatable,dimension(:) :: epm
            real, allocatable,dimension(:,:) :: agsca
            character*6 :: spec_vegetation
            integer, allocatable,dimension(:) :: i_gslt
            integer, allocatable,dimension(:) :: nbincli
            subroutine vt_read(nent,pathvegetation,fnamevegetation) ! in :pyratp:mod_Vegetation_TypesF2PY.f90:vegetation_types
                integer :: nent
                character*17 :: pathvegetation
                character*28 :: fnamevegetation
            end subroutine vt_read
            subroutine vt_destroy ! in :pyratp:mod_Vegetation_TypesF2PY.f90:vegetation_types
            end subroutine vt_destroy
        end module vegetation_types
        module dir_interception ! in :pyratp:mod_Dir_InterceptionF2PY.f90
            real, allocatable,dimension(:) :: xk
            real, allocatable,dimension(:,:) :: s_ss_vt
            real, allocatable,dimension(:) :: riv
            real, allocatable,dimension(:,:) :: share
            real, allocatable,dimension(:) :: ris
            real, allocatable,dimension(:,:) :: star_vt_vx
            real dimension(2) :: s_ss
            real, allocatable,dimension(:) :: rka
            real, allocatable,dimension(:,:) :: ffvvb
            real :: star_canopy
            real, allocatable,dimension(:) :: ffcvb
            real, allocatable,dimension(:,:) :: ffvsb
            real, allocatable,dimension(:) :: ffcsb
            real :: dpy
            real :: dpx
            real, allocatable,dimension(:) :: star_vt
            real, allocatable,dimension(:,:) :: ffsvb
            real, allocatable,dimension(:,:,:) :: s_detailed
            real, allocatable,dimension(:) :: star_vx
            subroutine di_doall(hmoy0,azmoy0,omega0,dpx0,dpy0,scatt0,ib0) ! in :pyratp:mod_Dir_InterceptionF2PY.f90:dir_interception
                use constant_values
                use grid3d
                use vegetation_types
                real :: hmoy0
                real :: azmoy0
                real :: omega0
                real :: dpx0
                real :: dpy0
                logical :: scatt0
                logical :: ib0
            end subroutine di_doall
            subroutine beampath(oax,oay,oaz,x0,y0,z0,omega0) ! in :pyratp:mod_Dir_InterceptionF2PY.f90:dir_interception
                use constant_values
                use grid3d
                use vegetation_types
                real :: oax
                real :: oay
                real :: oaz
                real :: x0
                real :: y0
                real :: z0
                real :: omega0
            end subroutine beampath
            subroutine di_destroy ! in :pyratp:mod_Dir_InterceptionF2PY.f90:dir_interception
            end subroutine di_destroy
        end module dir_interception
        module hemi_interception ! in :pyratp:mod_Hemi_InterceptionF2PY.f90
            real, allocatable,dimension(:,:) :: starsky_vt_vx
            real :: starsky_canopy
            real, allocatable,dimension(:) :: rdis
            real, allocatable,dimension(:,:,:,:) :: ffvv
            real, allocatable,dimension(:,:) :: rdiv
            real, allocatable,dimension(:) :: starsky_vx
            real, allocatable,dimension(:,:,:) :: ffvs
            real, allocatable,dimension(:,:) :: ffcv
            real, allocatable,dimension(:) :: ffcs
            real, allocatable,dimension(:) :: starsky_vt
            real, allocatable,dimension(:,:,:) :: ffsv
            subroutine hi_doall(dpx0,dpy0,ib0) ! in :pyratp:mod_Hemi_InterceptionF2PY.f90:hemi_interception
                use dir_interception
                use constant_values
                use grid3d
                use skyvault
                use vegetation_types
                real :: dpx0
                real :: dpy0
                logical :: ib0
            end subroutine hi_doall
            subroutine hi_destroy ! in :pyratp:mod_Hemi_InterceptionF2PY.f90:hemi_interception
            end subroutine hi_destroy
        end module hemi_interception
        module micrometeo ! in :pyratp:mod_MicrometeoF2PY.f90
            real, allocatable,dimension(:) :: uref
            integer :: ntimemax
            real, allocatable,dimension(:) :: glob
            real, allocatable,dimension(:) :: direct
            real :: tsol
            integer :: nbli
            logical :: endmeteo
            real, allocatable,dimension(:) :: diff
            integer :: ntime
            real :: taref
            real, allocatable,dimension(:,:) :: tabmeteo
            real :: earef
            real :: hour
            real :: hrsol
            real :: ratmos
            real :: day
            real :: caref
            real, allocatable,dimension(:) :: dsg
            character*6 :: spec_mmeteo
            subroutine mm_initiate ! in :pyratp:mod_MicrometeoF2PY.f90:micrometeo
                use vegetation_types
                use grid3d
            end subroutine mm_initiate
            subroutine mm_read(ntime,nbli) ! in :pyratp:mod_MicrometeoF2PY.f90:micrometeo
                use vegetation_types
                use grid3d
                integer :: ntime
                integer :: nbli
            end subroutine mm_read
            subroutine mm_destroy ! in :pyratp:mod_MicrometeoF2PY.f90:micrometeo
            end subroutine mm_destroy
        end module micrometeo
        module shortwave_balance ! in :pyratp:mod_Shortwave_BalanceF2PY.f90
            real, allocatable,dimension(:,:,:) :: swra_detailed
            real, allocatable,dimension(:) :: rareflected
            real, allocatable,dimension(:,:,:) :: parirrad
            real, allocatable,dimension(:,:) :: xintav
            real, allocatable,dimension(:,:) :: xint1v
            real, allocatable,dimension(:) :: xint1s
            real, allocatable,dimension(:) :: ratransmitted
            real :: hdeg
            real, allocatable,dimension(:,:,:,:) :: ra_detailed
            real, allocatable,dimension(:,:) :: spar
            real :: azdeg
            real, allocatable,dimension(:,:) :: raefficiency_vt
            real, allocatable,dimension(:) :: xintas
            subroutine swrb_doall ! in :pyratp:mod_Shortwave_BalanceF2PY.f90:shortwave_balance
                use vegetation_types
                use dir_interception
                use grid3d
                use micrometeo
                use skyvault
                use hemi_interception
            end subroutine swrb_doall
            subroutine sundirection(sunheight,sunazimuth,latitude,longitude,timezone,day,hour) ! in :pyratp:mod_Shortwave_BalanceF2PY.f90:shortwave_balance
                real :: sunheight
                real :: sunazimuth
                real :: latitude
                real :: longitude
                real :: timezone
                real :: day
                real :: hour
            end subroutine sundirection
            subroutine directbeam_interception(day,hour) ! in :pyratp:mod_Shortwave_BalanceF2PY.f90:shortwave_balance
                use dir_interception
                use vegetation_types
                use grid3d
                use skyvault
                real :: day
                real :: hour
            end subroutine directbeam_interception
            subroutine spectral_radiation_balance(iblo) ! in :pyratp:mod_Shortwave_BalanceF2PY.f90:shortwave_balance
                use vegetation_types
                use dir_interception
                use grid3d
                use micrometeo
                use skyvault
                use hemi_interception
                integer :: iblo
            end subroutine spectral_radiation_balance
            subroutine swrb_destroy ! in :pyratp:mod_Shortwave_BalanceF2PY.f90:shortwave_balance
            end subroutine swrb_destroy
        end module shortwave_balance
        module energy_balance ! in :pyratp:mod_Energy_BalanceF2PY.f90
            real, allocatable,dimension(:) :: e_vt
            real :: e_canopy
            real, allocatable,dimension(:,:,:) :: rco2
            real :: h_canopy
            real, allocatable,dimension(:,:) :: e_vt_vx
            real, allocatable,dimension(:,:,:) :: ts
            real, allocatable,dimension(:) :: e_vx
            real, allocatable,dimension(:,:) :: sts
            real, allocatable,dimension(:,:,:) :: gs
            real, allocatable,dimension(:,:) :: e_ss_vt
            real, allocatable,dimension(:,:,:) :: e
            real dimension(2) :: e_ss
            subroutine eb_doall_mine ! in :pyratp:mod_Energy_BalanceF2PY.f90:energy_balance
                use constant_values
                use dir_interception
                use shortwave_balance
                use grid3d
                use vegetation_types
                use micrometeo
                use skyvault
                use hemi_interception
            end subroutine eb_doall_mine
            subroutine eb_doall ! in :pyratp:mod_Energy_BalanceF2PY.f90:energy_balance
                use constant_values
                use dir_interception
                use shortwave_balance
                use grid3d
                use vegetation_types
                use micrometeo
                use skyvault
                use hemi_interception
            end subroutine eb_doall
            subroutine jarvis_stomata(jent,leaf_nitrogen,par_irrad,ca,hrsol,leaf_temp,vpdair,ga,rsi,drsi) ! in :pyratp:mod_Energy_BalanceF2PY.f90:energy_balance
                use vegetation_types
                integer :: jent
                real :: leaf_nitrogen
                real :: par_irrad
                real :: ca
                real :: hrsol
                real :: leaf_temp
                real :: vpdair
                real :: ga
                real :: rsi
                real :: drsi
            end subroutine jarvis_stomata
            subroutine eb_destroy ! in :pyratp:mod_Energy_BalanceF2PY.f90:energy_balance
            end subroutine eb_destroy
        end module energy_balance
        module photosynthesis ! in :pyratp:mod_PhotosynthesisF2PY.f90
            real :: alpha
            real :: specif25
            real :: kc25
            real, allocatable,dimension(:,:,:) :: a_detailed
            real :: a_canopy
            real, allocatable,dimension(:,:) :: cvcmax
            real :: dhaspecif
            real, allocatable,dimension(:,:) :: crespd
            real :: ko25
            real :: cspecif
            real :: dharespd
            real, allocatable,dimension(:,:) :: cjmax
            real, allocatable,dimension(:,:) :: a_ss_vt
            real dimension(2) :: a_ss
            real :: ckc
            real :: cko
            real :: dhajmax
            real :: dhako
            real :: dhdjmax
            real :: dhakc
            real :: dhavcmax
            real, allocatable,dimension(:) :: a_vt
            real, allocatable,dimension(:,:) :: a_vt_vx
            real :: dhdvcmax
            real, allocatable,dimension(:) :: a_vx
            real :: dsvcmax
            real :: o2
            real :: dsjmax
            subroutine farquhar_parameters_set ! in :pyratp:mod_PhotosynthesisF2PY.f90:photosynthesis
            end subroutine farquhar_parameters_set
            subroutine farquhar_scaling_factors ! in :pyratp:mod_PhotosynthesisF2PY.f90:photosynthesis
                use constant_values
                use grid3d
                use vegetation_types
            end subroutine farquhar_scaling_factors
            subroutine ps_doall ! in :pyratp:mod_PhotosynthesisF2PY.f90:photosynthesis
                use constant_values
                use energy_balance
                use dir_interception
                use shortwave_balance
                use grid3d
                use vegetation_types
                use micrometeo
                use skyvault
                use hemi_interception
            end subroutine ps_doall
            subroutine farquhar_model_1(net_a,crespd0,cvcmax0,cjmax0,rco2pa,leaf_tempk,leaf_par,caref) ! in :pyratp:mod_PhotosynthesisF2PY.f90:photosynthesis
                use constant_values
                real :: net_a
                real :: crespd0
                real :: cvcmax0
                real :: cjmax0
                real :: rco2pa
                real :: leaf_tempk
                real :: leaf_par
                real :: caref
            end subroutine farquhar_model_1
            subroutine ps_destroy ! in :pyratp:mod_PhotosynthesisF2PY.f90:photosynthesis
            end subroutine ps_destroy
        end module photosynthesis
        module minerpheno ! in :pyratp:mod_MinerPhenoF2PY.f90
            integer, allocatable,dimension(:) :: larvadeath
            real, allocatable,dimension(:) :: dev_rate
            real, allocatable,dimension(:) :: sum_time
            real, allocatable,dimension(:) :: sum_tair
            integer :: nlarvadead
            real, allocatable,dimension(:) :: tbody
            real, allocatable,dimension(:) :: sum_dev_rate
            real :: sum_taref
            integer, allocatable,dimension(:) :: larvaout
            integer :: nlarvaout
            subroutine miph_doall ! in :pyratp:mod_MinerPhenoF2PY.f90:minerpheno
                use constant_values
                use energy_balance
                use dir_interception
                use shortwave_balance
                use grid3d
                use vegetation_types
                use micrometeo
                use skyvault
                use hemi_interception
            end subroutine miph_doall
            subroutine miph_allocate ! in :pyratp:mod_MinerPhenoF2PY.f90:minerpheno
                use grid3d
            end subroutine miph_allocate
            subroutine miph_destroy ! in :pyratp:mod_MinerPhenoF2PY.f90:minerpheno
            end subroutine miph_destroy
        end module minerpheno
        module ratp ! in :pyratp:prog_RATP.f90
            use constant_values
            use energy_balance
            use dir_interception
            use shortwave_balance
            use grid3d
            use vegetation_types
            use micrometeo
            use skyvault
            use minerpheno
            use photosynthesis
            use hemi_interception
            integer, optional :: form_vgx=55
            real, allocatable,dimension(:,:) :: out_time_spatial
            real, allocatable,dimension(:,:) :: out_time_tree
            integer, optional :: itertree=0
            character(len=17) :: pathresult
            real, allocatable,dimension(:,:) :: out_rayt
            integer, optional :: iterspatial=0
            integer, optional :: nbiter=0
            integer, optional :: val=1
            integer dimension(100) :: numy_out
            integer dimension(100) :: numx_out
            integer dimension(100) :: numz_out
            integer dimension(100) :: kxyz_out
            integer, optional :: nbvoxelveg=1
            character*200 :: fname
            integer, optional :: filetypearchi=1
            subroutine do_all_mine ! in :pyratp:prog_RATP.f90:ratp
            end subroutine do_all_mine
            subroutine do_all ! in :pyratp:prog_RATP.f90:ratp
            end subroutine do_all
            subroutine do_interception ! in :pyratp:prog_RATP.f90:ratp
            end subroutine do_interception
            subroutine out_rayt_destroy ! in :pyratp:prog_RATP.f90:ratp
            end subroutine out_rayt_destroy
        end module ratp
    end interface 
end python module pyratp

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
